const n=JSON.parse(`{"key":"v-694379a6","path":"/program/c/c.html","title":"C语言笔记","lang":"zh-CN","frontmatter":{"date":"2023-05-08T00:00:00.000Z","category":["C","语言"],"tag":["C"],"description":"C语言笔记 待补充... // 预编译 指在编译时包含stdio.h这个头文件 #include &lt;stdio.h&gt; // 主函数 从main函数执行 int main() { // \\\\n 换行符 printf(\\"Hello, World!\\\\n\\"); // \\\\\\\\ 反斜杠 printf(\\"Hello, World!\\\\\\\\\\"); // \\\\\\" 双引号 printf(\\"Hello, World!\\\\\\"\\"); // \\\\t 制表符 printf(\\"Hello, World!\\\\t'\\"); return 0; }","head":[["meta",{"property":"og:url","content":"https://zxsking.github.io/program/c/c.html"}],["meta",{"property":"og:site_name","content":"Gking's blog"}],["meta",{"property":"og:title","content":"C语言笔记"}],["meta",{"property":"og:description","content":"C语言笔记 待补充... // 预编译 指在编译时包含stdio.h这个头文件 #include &lt;stdio.h&gt; // 主函数 从main函数执行 int main() { // \\\\n 换行符 printf(\\"Hello, World!\\\\n\\"); // \\\\\\\\ 反斜杠 printf(\\"Hello, World!\\\\\\\\\\"); // \\\\\\" 双引号 printf(\\"Hello, World!\\\\\\"\\"); // \\\\t 制表符 printf(\\"Hello, World!\\\\t'\\"); return 0; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-30T13:33:13.000Z"}],["meta",{"property":"article:author","content":"Gking"}],["meta",{"property":"article:tag","content":"C"}],["meta",{"property":"article:published_time","content":"2023-05-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-30T13:33:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C语言笔记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-08T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-30T13:33:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Gking\\",\\"url\\":\\"https://gking.icu\\"}]}"]]},"headers":[],"git":{"createdTime":1683621244000,"updatedTime":1703943193000,"contributors":[{"name":"gking","email":"1833736821@qq.com","commits":2}]},"readingTime":{"minutes":0.28,"words":85},"filePathRelative":"program/c/c.md","localizedDate":"2023年5月8日","excerpt":"<h1> C语言笔记</h1>\\n<h1> 待补充...</h1>\\n<div class=\\"language-c line-numbers-mode\\" data-ext=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token comment\\">// 预编译 指在编译时包含stdio.h这个头文件</span>\\n<span class=\\"token macro property\\"><span class=\\"token directive-hash\\">#</span><span class=\\"token directive keyword\\">include</span> <span class=\\"token string\\">&lt;stdio.h&gt;</span></span>\\n\\n<span class=\\"token comment\\">// 主函数 从main函数执行</span>\\n<span class=\\"token keyword\\">int</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// \\\\n 换行符</span>\\n    <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hello, World!\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// \\\\\\\\ 反斜杠</span>\\n    <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hello, World!\\\\\\\\\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// \\\\\\" 双引号</span>\\n    <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hello, World!\\\\\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// \\\\t 制表符</span>\\n    <span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Hello, World!\\\\t'\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    \\n    <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
